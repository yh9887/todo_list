const todoInput = document.getElementById('todoInput');
const todoList = document.querySelector('.todo_list');


// localStorageÏóê "TODOS" ÌÇ§ Í∞íÏù¥ ÏûàÏúºÎ©¥ todosÏóê ÎÑ£Ïñ¥Ï£ºÍ≥† ÏóÜÏúºÎ©¥ Îπà Î∞∞Ïó¥Î°ú todos ÏÉùÏÑ±
// || [] ; Í∞Ä ÏóÜÏúºÎ©¥ Ï≤òÏùåÏóê Îπà Î∞∞Ïó¥Ïùº Í≤ΩÏö∞ Ïò§Î•ò Î∞úÏÉùÌï®
let toDos = JSON.parse(localStorage.getItem("TODOS")) || [];

function listAllCheck(todoId,todoChecked,todoListBox, checkBox){
    const checkboxes = document.getElementsByName('check');
    // Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóê Ï≤¥ÌÅ¨ Ï†ÄÏû•ÌïòÍ∏∞
    toDos.map((toDo)=> {
        toDo.status = todoChecked;
        if (toDo.id == todoId) {
            toDo.status = todoChecked;
        }
    });
    // ÌôîÎ©¥ÏóêÏÑú Ï≤¥ÌÅ¨Ìï¥Ï£ºÍ∏∞
    checkboxes.forEach((checkbox) => {
    checkbox.checked = todoChecked;
    if (checkbox.checked) {
        // todoÏùò Ï≤¥ÌÅ¨ ÏÉÅÌÉúÍ∞Ä trueÏù¥Î©¥ input checkboxÎ•º Ï≤¥ÌÅ¨Îêú ÏÉÅÌÉúÎ°ú ÏÑ§Ï†ï
        checkBox.setAttribute("checked", true);
        todoListBox.classList.add('active_check');
        todoListBox.classList.remove('none_check');
    }
    else{
        todoListBox.classList.add('none_check');
        todoListBox.classList.remove('active_check');
    }
    });

    localStorage.setItem("TODOS", JSON.stringify(toDos))
}
function listChange(todoId, todoInputValue){
    console.log("ggg")
    toDos.map((toDo) => {
        if(toDo.id == todoId)
        toDo.value = todoInputValue
    })
    localStorage.setItem("TODOS", JSON.stringify(toDos))
}
function listClearBtn(){ 
        // Ï≤¥ÌÅ¨Í∞Ä ÎêòÏßÄ ÏïäÏùÄ Í≤ÉÎßå ÏÉàÎ°úÏö¥ Î∞∞Ïó¥Ïóê Îã¥Ïùå
        // Ïó¨Í∏∞ÏÑú Ïôú mapÏïàÎêòÎäîÏßÄ?
        // let newTodo = [];
        // toDos.map((toDo)=>{
        //     if(toDo.status === false){
        //         newTodo.push(toDo);
        //     }
        // });

        const newTodo = toDos.filter((toDo) => toDo.status === false );
        // Ìó∑Í∞àÎ¶¨ÏßÄ Îßê Í≤É! forEachÎäî Í∏∞Ï°¥ Î∞∞Ïó¥ÏùÑ ÏàúÌöåÌïòÎ©∞ Î∞òÎ≥µ Ïã§Ìñâ
        toDos.forEach((toDo)=>{
            // Ï≤¥ÌÅ¨ Îêú ÏÉÅÌÉúÏù∏ list ÌôîÎ©¥ÏóêÏÑú ÏßÄÏõåÏ£ºÍ∏∞
            if(toDo.status){
                const todoListElement = document.getElementById(toDo.id);
                todoListElement.remove();
            }
        });

        // Î∞∞Ïó¥ ÏóÖÎç∞Ïù¥Ìä∏
        toDos = newTodo;
        localStorage.setItem("TODOS", JSON.stringify(newTodo));

        const listCount = document.querySelector('.list_count');
        listCount.innerText = `${toDos.length} items left`;
}
function listCheckBtn(type) {
    const allBtn = document.getElementById('All')
    const activeBtn = document.getElementById('Active')
    const comBtn = document.getElementById('Completed')
    const listCount = document.querySelector('.list_count');
    const BUTTON_ACTIVE = 'button_active'
    const nameNone = document.querySelectorAll('.none_check'); // Ï≤¥ÌÅ¨ÎêòÏßÄ ÏïäÏùÄÍ≤É
    const nameActive = document.querySelectorAll('.active_check'); // Ï≤¥ÌÅ¨ÎêúÍ≤É

    let todoArr = [];

    allBtn.classList.remove(BUTTON_ACTIVE);
    activeBtn.classList.remove(BUTTON_ACTIVE);
    comBtn.classList.remove(BUTTON_ACTIVE);
    if (type == "All") {
        allBtn.classList.add(BUTTON_ACTIVE);
    } else if (type == "Active") {
        activeBtn.classList.add(BUTTON_ACTIVE);
        document.getElementById('allCheckBox').checked = false;
    } else if (type == "Completed") {
        comBtn.classList.add(BUTTON_ACTIVE);
        document.getElementById('allCheckBox').checked = true;
    }
    todoArr = type == "All" ? toDos : toDos.filter((toDo) => { 
        if(type == "Completed") { 
            return toDo.status === true 
        } else if(type == "Active"){
            return toDo.status === false
        }});
        
    for ( let i = 0; i < nameNone.length; i++ ) {
        if(type == "All" || type == "Active") nameNone[i].style.display = 'flex';
        if (type == "Completed") nameNone[i].style.display = 'none';
    }
    for ( let i = 0; i < nameActive.length; i++ ) {
        if(type == "Active")  nameActive[i].style.display = 'none';
        if (type == "All" || type == "Completed") nameActive[i].style.display = 'flex';
    }
    listCount.innerText = `${todoArr.length} items left`;

}
function delTodo(e) {
    console.log('ggg')
    // ÌôîÎ©¥ÏóêÏÑú ÏßÄÏõåÏ£ºÎäî ÏûëÏóÖ
    const todoDel = e.target.parentNode;
    todoDel.remove();
    // Ìó∑Í∞àÎ¶¨ÏßÄ Îßê Í≤É!! todoDel Îäî list_boxÎ•º ÏùòÎØ∏Ìï®!

    // Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóêÏÑú ÏßÄÏõåÏ£ºÎäî ÏûëÏóÖ
    /* 
    filter Ïì∏ Îïå Ï£ºÏùòÏÇ¨Ìï≠ !!!!! 
    Ï§ëÍ¥ÑÌò∏ > return Ïç®Ï§òÏïºÌï® , ÏïàÏì∞Î©¥ ÏûêÎèô return! 
    */
    const newTodos = toDos.filter((toDo) =>
        // ÌòÑÏû¨ ÎÇ¥Í∞Ä ÌÅ¥Î¶≠Ìïú Î∂ÄÎ™®(list_box)Ïùò idÏôÄ toDo.id(list_box)Í∞Ä Îã§Î•∏ Í≤ÉÎßå ÏÇ∞Ï∂ú
        parseInt(todoDel.id) !== toDo.id
    )
    toDos = newTodos;

    const listCount = document.querySelector('.list_count');
    listCount.innerText = `${toDos.length} items left`;
    localStorage.setItem('TODOS', JSON.stringify(newTodos));

};
function addTodo() {
    if (todoInput.value.length > 0) {
        const todoId = Math.floor(Math.random() * 999999);
        let todoChecked = false;
        // toDos Î∞∞Ïó¥Ïóê Í∞í ÎÑ£Ïñ¥Ï£ºÍ∏∞
        toDos.push({
            value: todoInput.value,
            id: todoId,
            status: todoChecked
        })
        // Î°úÏª¨Ïä§ÌÜ†Î¶¨ÏßÄÏóê toDos Î∞∞Ïó¥ Î¨∏ÏûêÏó¥Î°ú ÎÑ£Ïñ¥Ï£ºÍ∏∞
        localStorage.setItem('TODOS', JSON.stringify(toDos));
        paintTodo(todoInput.value, todoId, todoChecked);
    }
    todoInput.value = "";
}
function getTodo() {
    // Î¶¨Ïä§Ìä∏Í∞Ä ÌïòÎÇòÎùºÎèÑ ÏûàÏúºÎ©¥ isCheckedÎ•º trueÎ°ú Î∞îÍøîÏ§ÄÎã§.
    //  Ï≤òÏùåÎ∂ÄÌÑ∞ trueÏù¥Î©¥ allcheckBoxÍ∞Ä Ï≤òÏùåÎ∂ÄÌÑ∞ trueÏù¥Í∏∞ ÎïåÎ¨∏!
    let isChecked = toDos.length >0 ? true : false;
    toDos.forEach((toDo) => {
        if (toDo.value !== null) {
            paintTodo(toDo.value, toDo.id, toDo.status);
        }
        // Î∞òÎ≥µÌñàÏùÑ Îïå ÌïòÎÇòÎùºÎèÑ falseÍ∞Ä ÏûàÏúºÎ©¥ isCheckedÎ•º false Î°ú Î∞îÍøîÏ£ºÍ∏∞
        if(toDo.status === false){
            isChecked = false;
        }
    })
    if(isChecked){
        document.getElementById('allCheckBox').checked = isChecked;
    }
}
function paintTodo(todoInputValue, todoId, todoChecked) {
    // ÌôîÎ©¥Ïóê ÏöîÏÜå Í∑∏Î†§Ï£ºÍ∏∞
    const todoListBox = document.createElement('div');
    todoListBox.setAttribute('class', 'list_box');
    todoListBox.setAttribute('id', todoId);

    todoListBox.addEventListener('dblclick', function(e){
        e.target.disabled=false;
    });

    const checkBox = document.createElement('input');
    checkBox.setAttribute('class', 'check_box');
    checkBox.setAttribute('type', 'checkbox');
    checkBox.setAttribute('name', 'check');
    checkBox.setAttribute('id', todoId);

    const allCheckBtn = document.getElementById('allCheckBox');
    allCheckBtn.addEventListener('click',function(e){
        listAllCheck(todoId, e.target.checked, todoListBox, checkBox);
        if (e.target.checked) {
            ListName.classList.add('name_active');
        } else {
            ListName.classList.remove('name_active');
        } 
    })


    if (todoChecked) {
        // todoÏùò Ï≤¥ÌÅ¨ ÏÉÅÌÉúÍ∞Ä trueÏù¥Î©¥ input checkboxÎ•º Ï≤¥ÌÅ¨Îêú ÏÉÅÌÉúÎ°ú ÏÑ§Ï†ï
        checkBox.setAttribute("checked", true);
        todoListBox.classList.add('active_check');
        todoListBox.classList.remove('none_check');
    }
    else{
        todoListBox.classList.add('none_check');
        todoListBox.classList.remove('active_check');
    }
    // Ï≤¥ÌÅ¨Î∞ïÏä§ ÌÅ¥Î¶≠ Ïãú Ìï®Ïàò Ïã§Ìñâ
    checkBox.addEventListener('click', function (e) {
        // toDos Î∞∞Ïó¥ ÎèåÎ©¥ÏÑú Ï≤¥ÌÅ¨Îêú Í≤ÉÎßå Í≥†Î•¥Í∏∞
        toDos.map((toDo) => {
            // todoÏùò idÍ∞Ä Ï≤¥ÌÅ¨ Î∞ïÏä§Î•º ÌÅ¥Î¶≠Ìïú todoÏùò idÎûë Í∞ôÏùÄÍ±∏ Ï∞æÏùå
            if (toDo.id == todoId) {
                toDo.status = e.target.checked;
            }
        });
        localStorage.setItem("TODOS", JSON.stringify(toDos));
        console.log("üöÄ ~ file: test.js:212 ~ e.target.checked", e.target.checked);
        if (e.target.checked) {
            ListName.classList.add('name_active');
            todoListBox.classList.add('active_check');
            todoListBox.classList.remove('none_check');
        } else {
            ListName.classList.remove('name_active');
            todoListBox.classList.add('none_check');
            todoListBox.classList.remove('active_check');
        } 
    });


    const ListName = document.createElement('input');
    ListName.setAttribute('type', 'text')
    ListName.setAttribute('class', `list_name ${todoId}`);
    ListName.setAttribute('id', todoId);
    ListName.value = todoInputValue;
    ListName.disabled = true;   
    // ÎßåÏïΩ Ï≤¥ÌÅ¨Î∞ïÏä§Í∞Ä Ï≤¥ÌÅ¨ÎêòÏñ¥ ÏûàÎã§Î©¥, ListNameÏóê Î∞ëÏ§Ñ Í∑∏Ïñ¥Ï£ºÍ∏∞
    if (todoChecked) {
        ListName.setAttribute("class", `list_name name_active ${todoId}`);
    } else {
        // todo ÏÉÅÌÉúÍ∞Ä falseÏù¥Î©¥ Î∞ëÏ§ÑÏùÑ ÏßÄÏö∞Í∏∞ ÏúÑÌï¥ name_active classÎ•º ÏßÄÏõåÏ§å
        ListName.setAttribute("class", `list_name ${todoId}`);
    }
    ListName.addEventListener('blur', (e)=>{
        listChange(todoId, e.target.value)
    })

    const ListDel = document.createElement('button');
    ListDel.setAttribute('type', 'button')
    ListDel.innerText = "‚ùå";
    ListDel.addEventListener('click', delTodo)

    const listCount = document.querySelector('.list_count');
    listCount.innerText = `${toDos.length} items left`;

    todoList.appendChild(todoListBox);
    todoListBox.appendChild(checkBox);
    todoListBox.appendChild(ListName);
    todoListBox.appendChild(ListDel);
}

getTodo();